reduce = (from, to, initial, f) => {
    agg = (n, result) => {
        if (n > to) result else {
            agg(n + 1, f(result, n))
        }
    }
    agg(from, initial)
}

sumOfSquares = (from, to) =>
    reduce(from, to, 0, (a, x) => a + x * x)

sum = (from, to) =>
    reduce(from, to, 0, (a, x) => a + x)

squareOfSums = (from, to) => {
    s = sum(from, to)
    s * s
}

squareOfSums(1,100) - sumOfSquares(1,100)